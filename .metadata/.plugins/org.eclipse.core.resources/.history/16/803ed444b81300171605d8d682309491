package com.study.sample.parser;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.HashSet;
import java.util.Set;

import javax.xml.stream.XMLInputFactory;
import javax.xml.stream.XMLStreamConstants;
import javax.xml.stream.XMLStreamException;
import javax.xml.stream.XMLStreamReader;

import com.study.sample.entity.Medicine;

public class MedicineStAXBuilder extends AbstractMedicineBuilder {
	private HashSet<Medicine> medicines = new HashSet<>();
	private XMLInputFactory inputFactory;
	
	public MedicineStAXBuilder(){
		inputFactory = XMLInputFactory.newInstance();
	}
	
	public Set<Medicine> getMedicines() {
		return medicines;
		}
	
	public void buildSetMedicines(String fileName) {
		FileInputStream inputStream = null;
		XMLStreamReader reader = null;
		String name;
		try {
			inputStream = new FileInputStream(new File(fileName));
			reader = inputFactory.createXMLStreamReader(inputStream);
			while (reader.hasNext()) {
				int type = reader.next();
				if (type == XMLStreamConstants.START_ELEMENT) {
					name = reader.getLocalName();
					if (name.matches("\\S.*?medicine")) {
						Medicine medicine = buildMedicine(reader);
						medicines.add(medicine);
					}
				}
			}
		} catch (XMLStreamException ex) {
			System.err.println("StAX parsing error! " + ex.getMessage());
		} catch (FileNotFoundException ex) {
			System.err.println("File " + fileName + " not found! " + ex);
		} finally {
			try {
			if (inputStream != null) {
				inputStream.close();
			}
			} catch (IOException e) {
				System.err.println("Impossible close file "+fileName+" : "+e);
			}
		}
	}
}